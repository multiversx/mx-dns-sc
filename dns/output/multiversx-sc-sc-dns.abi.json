{
    "buildInfo": {
        "rustc": {
            "version": "1.66.0-nightly",
            "commitHash": "db0597f5619d5ed93feca28e61226d3581cc7867",
            "commitDate": "2022-10-11",
            "channel": "Nightly",
            "short": "rustc 1.66.0-nightly (db0597f56 2022-10-11)"
        },
        "contractCrate": {
            "name": "multiversx-sc-sc-dns",
            "version": "1.1.0"
        },
        "framework": {
            "name": "multiversx-sc",
            "version": "0.39.5"
        }
    },
    "name": "Dns",
    "constructor": {
        "inputs": [
            {
                "name": "registration_cost",
                "type": "BigUint"
            }
        ],
        "outputs": []
    },
    "endpoints": [
        {
            "name": "canRegister",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "name",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "register",
            "mutability": "mutable",
            "payableInTokens": [
                "EGLD"
            ],
            "inputs": [
                {
                    "name": "name",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "migrate",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "name",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "resolve",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "name",
                    "type": "bytes"
                }
            ],
            "outputs": [
                {
                    "type": "optional<Address>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "resolveFromHash",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "name_hash",
                    "type": "array32<u8>"
                }
            ],
            "outputs": [
                {
                    "type": "optional<multi<Address,SuffixType>>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getNameValueState",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "name",
                    "type": "bytes"
                }
            ],
            "outputs": [
                {
                    "type": "ValueState"
                }
            ]
        },
        {
            "name": "claim",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "setUpdateGasLimit",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "gas_limit",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "getRegistrationCost",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "getValueState",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "name_hash",
                    "type": "array32<u8>"
                }
            ],
            "outputs": [
                {
                    "type": "ValueState"
                }
            ]
        },
        {
            "name": "getUpdateGasLimit",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getContractOwner",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "docs": [
                "Incorrectly named, it should actually read the `sibling id` or `contract id`."
            ],
            "name": "getOwnShardId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u8"
                }
            ]
        },
        {
            "name": "nameHash",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "name",
                    "type": "bytes"
                }
            ],
            "outputs": [
                {
                    "type": "array32<u8>"
                }
            ]
        },
        {
            "docs": [
                "Incorrectly named, it is the contract id that corresponds to the given name, from 0 to 255."
            ],
            "name": "nameShard",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "name",
                    "type": "bytes"
                }
            ],
            "outputs": [
                {
                    "type": "u8"
                }
            ]
        },
        {
            "name": "validateName",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "name",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "version",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "setFeatureFlag",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "feature_name",
                    "type": "bytes"
                },
                {
                    "name": "value",
                    "type": "bool"
                }
            ],
            "outputs": []
        }
    ],
    "events": [],
    "hasCallback": true,
    "types": {
        "SuffixType": {
            "type": "enum",
            "variants": [
                {
                    "name": "Elrond",
                    "discriminant": 0
                },
                {
                    "name": "X",
                    "discriminant": 1
                }
            ]
        },
        "ValueState": {
            "type": "enum",
            "variants": [
                {
                    "name": "None",
                    "discriminant": 0
                },
                {
                    "name": "PendingElrond",
                    "discriminant": 1,
                    "fields": [
                        {
                            "name": "0",
                            "type": "Address"
                        }
                    ]
                },
                {
                    "name": "RegisteredElrond",
                    "discriminant": 2,
                    "fields": [
                        {
                            "name": "0",
                            "type": "Address"
                        }
                    ]
                },
                {
                    "name": "PendingMigration",
                    "discriminant": 3,
                    "fields": [
                        {
                            "name": "0",
                            "type": "Address"
                        }
                    ]
                },
                {
                    "name": "PendingX",
                    "discriminant": 4,
                    "fields": [
                        {
                            "name": "0",
                            "type": "Address"
                        }
                    ]
                },
                {
                    "name": "RegisteredX",
                    "discriminant": 5,
                    "fields": [
                        {
                            "name": "0",
                            "type": "Address"
                        }
                    ]
                }
            ]
        }
    }
}
